=== Purpose

Primary, puzzle is to be designed in order to learn Backbone.js features and apply them on practice.

=== User Stories

* As a user I am not supposed to be asked to authenticate before playing - anyone can start playing puzzle by requesting the puzzle root url.

* As a user I should be able to select picture by category or at random (using clean and nice dropdown box).
Once a picture is selected and a play session is started, the dropdown will be either disabled or hidden.

* As a user I am supposed to preview pictures with high complexity prior to a play session, otherwise not. 
  If so, after selecting a category, a picture is shown with the 'X' to close the picture and start a play session as soon as I am finished analyzing it.
  OR:
  After selecting a category, a picture is shown with a 'Start' and 'Close' buttons. If I am ok with the picture, I press 'start' - the picture disappears and a play session starts. Otherwise, I click on close which makes it disappear and categories' dropdown be back. 

* As a user I should see an isolated area (board) at the center of the screen. This board is where pieces of puzzle must be applied in order to construct the whole picture. Its border must be styled appropriately.

* As a user I should see pieces of puzzle all around the board. Each of them should be placed parallel to the screen axes,their image should be rotated upside down/bottom up/... to complicate the play session. Their individual position and distance relative to the rest and to the board should be arbitrary.

* I expect that on hovering a piece borders should be highleted

* I expect that on clicking a piece should be rotated clockwise when both on the board and out of it.   

* I should be able to place a piece on the board by drag-n'-dropping it on any of its cells

* I expect that after moving a piece onto the board correctly, the occupying cell's borders should be highlighted green for a while. Afterwards, the piece should be disabled so that I can no longer move it elsewhere

* I expect that if I fail to place a piece correctly, the borders should be highlighted red/rose/orange until it is either removed out of the board, rotated to match the schema or moved to the matching cell (and rotated if needed)
 
* (From the last two points I assume that once on the board, only non-matching pieces can be freely moved across the board) 

* I expect that, potentially, any piece can be moved across the free zone or from within the board to any free div on the free zone (in case a piece did not match). 
  OR: it can only be moved from the free zone onto the board and back to its original place from within the board in case it did not match.

* After the picture is correctly constructed, I should be complimented and the above dropdown should be enabled/shown again so that I can select a category and start new play.

=== Technologies to be used:
* CouchDB
* Redis
* Ruby 1.9.3/2.0.0
* Ruby on Rails 4.0.0
* RMagick gem
* Backbone.js 

=== Backlog:

=== RELASE 1.1 

* Time should be limited and there should be a time out to get user more competitive
* Some score rating should be present as well...perhaps...

=== RELEASE 1.2 

User should be able to add some new images to gallery

=== RELEASE 1.3 

Pieces should resemble to puzzle curly pieces no squares anymore

=== RELEASE 1.4 

User story: as a user, I should be able to match any number of pieces everywhere on the screen and place them to the board, if the entire pieces tandem is matched with the board, then it is frozen, otherwise it can be dragged elsewhere where there is enough space? Possibly, a limited number of pieces can be matched that way in order to make them more movable and not blocked by other pieces.

=== RELEASE 2.0: 

Android version?

=== Consider at a later time:
- keep pieces in a div and centered to make it resemble a nice gallery. divs should be black background?
- Current Puzzle Image should be alive during the actual play too
- Background job for deleting outdated sessions FAILED for now. Whenever gem works fine, except it cannot access current class variables values, therefore Session.garbage_collect cannot be scheduled. Perhaps, I try another gem?
- write a set-up guide

=== Set-Up Guide:

==== General pre-setup
1. Install Git, set it up and clone the project according to Git instructions
2. Run 'bundle install' in the project directory in order to install all the missing gems
3. Install Redis key-value store and document-oriented CouchDB  latest version
4. Go and find 'redis.conf' file. Under the Snapshotting section, comment out the following lines:
 # save 900 1
 # save 300 10
 # save 60 10000

==== Database seeding
Note that because active_record framework was originally removed due to the project's CouchRest Model & 'RedisClient' ORM usage, no migrations should be run.

5. In the project directory run 'rails c' to switch to the console mode. When in the console mode, execute consequently three methods running the following commands:
 - 'Imagen.create_imagenes()'
 - 'Imagen.save_image_size()'
 - 'Imagen.create_pedazos()'


=== Actual usage guide:
1. Open terminal and run redis server as a background daemon or as a service('redis-server' command)
2. Open another terminal and run 'rails s' to start server
3. Visit 'localhost:3000/' and voila! Have fun!